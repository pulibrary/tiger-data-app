services:
  mediaflux:
    mac_address: "02:42:ac:11:00:02"
    image: "eosadler/tigerdata:latest"
    ports:
      - "8888:8888"
    networks:
      vlan:
        ipv4_address: 192.168.10.62
  rails:
    build: . # use the Dockerfile in the current directory
    ports:
      - "3000:3000"
    environment:
      - DOCKER_DB_HOST=192.168.10.61
      - RAILS_ENV=test
      - CI=true
      - SECRET_KEY_BASE=test
      - DD_TRACE_ENABLED=false
      - MEDIAFLUX_HOST=192.168.10.62
    command: tail -f /dev/null # keep the container running
    networks:
      vlan:
        ipv4_address: 192.168.10.63
  database:
    image: "postgres:13.5-alpine"
    ports:
    - "5432:5432"
    environment:
        POSTGRES_USER: tiger_data_user
        POSTGRES_DB: test_db
        POSTGRES_HOST_AUTH_METHOD: trust
    networks:
      vlan:
        ipv4_address: 192.168.10.61
  firefox:
    image: selenium/node-firefox:3.14.0-gallium
    volumes:
      - /dev/shm:/dev/shm
    depends_on:
      - hub
    environment:
      HUB_HOST: hub
    networks:
      vlan:
        ipv4_address: 192.168.10.60
  hub:
    image: selenium/hub:3.14.0-gallium
    ports:
      - "4444:4444"
    networks:
      vlan:
        ipv4_address: 192.168.10.64
  # redis:
  #   image: "redis:alpine"


networks:
  vlan:
    driver: macvlan
    # driver_opts:
    #   parent: eth0.10
    ipam:
      config:
        - subnet: "192.168.10.0/24"
          ip_range: "192.168.10.64/26"
          gateway: "192.168.10.1"