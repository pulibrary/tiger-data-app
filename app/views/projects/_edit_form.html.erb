<style>
  .grayed-out {
    background-color: #e1e1e1
  }
</style>

<div>
  <h2>Project Roles</h2>

  <p>Data Sponsor: <input type="text" id="data_sponsor" name="data_sponsor" required autofocus value="<%= @project.metadata[:data_sponsor] %>" /></p>
  <p>Data Manager: <input type="text" id="data_manager" name="data_manager" required value="<%= @project.metadata[:data_manager] %>" /></p>
  <p>Data User(s): </p>

  <div>
    <p>Read Only:</p>
    <ul id="ro-users-list">
      <% (@project.metadata[:data_user_read_only] || []).each do |user| %>
        <li id ="><%= user %>">
        <%=user%>
        <span>
            <a class="delete-ro-user" data-uid="<%= user %>" href="#" title="Revoke user ability to read">
              <i class="bi bi-trash delete_icon" data-uid="<%= user %>"></i>xxx
            </a>
        </span>
        </li>
      <% end %>
    </ul>
    <div>


      <input id="ro-user-uid-to-add" placeholder="netid"></input>
      <%= link_to "Add User", "#", id: "btn-add-ro-user", class: "btn btn-secondary" %>
      <span id="add-ro-user-message"></span>
    </div>
  </div>

  <div>
    <p>Read/Write:</p>
    <ul id = "rw-users-list">
      <% (@project.metadata[:data_user_read_write] || []).each do |user|%>
        <li id="<%= user %>"> <%=user%>
          <span>
            <a class="delete-rw-user" data-uid="<%= user %>" href="#" title="Revoke user ability to write">
              <i class="bi bi-trash delete_icon" data-uid="<%= user %>"></i>xxx
            </a>
          </span>
        </li>
      <%end%>
    </ul>
  </div>

  <div>
    <input id = "rw-user-uid-to-add" placeholder = "netid"> </input>
    <%= link_to "Add User", "#", id: "btn-add-rw-user", class: "btn btn-secondary" %>
    <span id = "add-rw-user-message"></span>
  </div>
</div>


<div>
  <h2>Project Description</h2>

  <div>Affiliated Departments:<br/>
    <select id="departments" name="departments[]" class="form-select" multiple >
      <% Affiliation.all.each do |affiliation| %>
        <% if @project.departments.include?(affiliation[:code]) %>
          <option selected><%= affiliation[:code] %></option>
        <% else %>
          <option><%= affiliation[:code] %></option>
        <% end %>
      <% end %>
    </select>
  </div>

  <% if @project.in_mediaflux? %>
    <!--
      Make the field readonly so the user cannot change it, but leave it as an HTML INPUT so that it is
      send back to the controller (we don't want to lose this value)
    -->
    <p>Project Directory: <%= Rails.configuration.mediaflux["api_root_ns"] %>/<input type="text" id="directory" name="directory" readonly value="<%= @project.metadata[:directory] %>" />
      (MediaFlux id: <%= @project.mediaflux_id %>)<br/>
      This project has already been saved to Mediaflux and the directory cannot be changed</p>
  <% else %>
    <p>Project Directory: <%= Rails.configuration.mediaflux["api_root_ns"] %>/<input type="text" id="directory" name="directory" required value="<%= @project.metadata[:directory] %>" /></p>
  <% end %>

  <p>Title: <input type="text" id="title" name="title" required value="<%= @project.metadata[:title] %>" /></p>
  <p>Description:
    <textarea type="text" id="description" name="description" class="input-text-long"
      rows="5" cols="120" placeholder=""><%= @project.metadata[:description] %></textarea>
  </p>
</div>

<!-- Keeps track of added read only users -->
<input type="text" id="ro_user_counter" name="ro_user_counter" value="0" style="display:none;"/>

<div class="actions">
  <input type="submit" class="btn btn-primary" value="Save" />
</div>

<script>
  $(() => {
    // Adds a read-only user
    $('#btn-add-ro-user').on('click', () => {

      // increase the Read Only user counter
      var counter = parseInt($('#ro_user_counter').val(), 10);
      counter += 1;
      $('#ro_user_counter').val(counter)

      // Define an ID for our new read only user
      var ro_user_id = `ro_user_${counter}`;

      // Create an HTML input box for the new user
      var netIdToAdd = $('#ro-user-uid-to-add').val();
      var html = `<input id="${ro_user_id}" name="${ro_user_id}" value="${netIdToAdd}" readonly class="grayed-out" />
        <span id="${ro_user_id}_delete_icon">
          <a class="delete-ro-user" data-el-id="${ro_user_id}" data-uid="${netIdToAdd}" href="#" title="Revoke user ability to read">
              <i class="bi bi-trash delete_icon" data-el-id="${ro_user_id}" data-uid="${netIdToAdd}"></i>xxx
          </a>
          <br/>
        </span>`;
      $('#ro-users-list').append(html);
      $('#ro-user-uid-to-add').val("");
      $('#ro-user-uid-to-add').focus();
      return false;
    });

    // Adds a read-write user
    $('#btn-add-rw-user').on('click', () => {
      var netIdToAdd = $('#rw-user-uid-to-add').val();
      var html = `<li id="${netIdToAdd}">${netIdToAdd}
        <span>
          <a class="delete-rw-user" data-uid="${netIdToAdd}" href="#" title="Revoke user ability to write">
              <i class="bi bi-trash delete_icon" data-uid="${netIdToAdd}"></i>xxx
          </a>
        </span>`;
      $('#rw-users-list').append(html);
      $('#rw-user-uid-to-add').val("");
      $('#rw-user-uid-to-add').focus();
      return false;
    });

    // Delete button for read-only users
    $(document).on('click', '.delete-ro-user', (el) => {
      var uid = $(el.target).data('uid');
      var ro_user_id = $(el.target).data('el-id');
      var ro_user_delete_icon = ro_user_id + "_delete_icon";
      const message = `Revoke access to user ${uid}`;
      if (window.confirm(message)) {
        $("#" + ro_user_id).remove();
        $("#" + ro_user_delete_icon).remove();
      }
      return false;
    });
    // Wire up the delete button for all read-write users.
    // Notice the use of $(document).on("click", selector, ...) instead of the
    // typical $(selector).on("click", ...). This syntax is required so that
    // we can detect the click even on HTML elements _added on the fly_ which
    // is the case when a user adds a new submitter or admin to the group.
    // Reference: https://stackoverflow.com/a/17086311/446681
    $(document).on('click', '.delete-rw-user', (el) => {
      var uid = $(el.target).data('uid');
      const message = `Revoke access to user ${uid}`;
      if (window.confirm(message)) {
        $("#" + uid).remove();
      }
      return false;
    });
  })
</script>
