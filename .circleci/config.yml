version: 2.1
commands:
  install_dependencies:
    steps:
      - run: cp Gemfile.lock Gemfile.lock.bak
      - restore_cache:
          key: &gem_key tiger_data-cimg-{{ checksum "Gemfile.lock.bak" }}
      - run: bundle config set path './vendor/bundle'
      - run: bundle install --jobs=4 --retry=3
      - save_cache:
          key: *gem_key
          paths:
            - ./vendor/bundle
      - restore_cache:
          name: Restore Yarn Package Cache
          key: &yarn_key tiger_data-yarn-cimg-{{ checksum "yarn.lock" }}
      - run:
          name: Install NPM Dependencies via Yarn
          command: yarn install --frozen-lockfile
      - save_cache:
          name: Save Yarn Package Cache
          key: *yarn_key
          paths:
            - ~/.cache/yarn
orbs:
  browser-tools: circleci/browser-tools@1.4.6
jobs:
  build: # name of your job
    working_directory: ~/tiger_data
    machine: # executor type
      image: ubuntu-2204:2024.01.1
      docker_layer_caching: true
    steps:
      - checkout  
      - run: sudo apt update && sudo apt install postgresql-client libmsgpack-dev libpq-dev
      - install_dependencies
      - persist_to_workspace:
          root: &root '~/tiger_data'
          paths: '*'

  ruby-lint:
    working_directory: *root
    machine: true
    steps:
      - run:
          name: Run rubocop
          command: bundle exec rubocop

  ruby-test:
    working_directory: *root
    machine: true
    steps:
      - attach_workspace:
          at: *root
      - run: echo "$DOCKERHUB_PASSWORD" | docker login --username $DOCKERHUB_USERNAME --password-stdin 
      - run: docker run -d --privileged --name mediaflux --publish 0.0.0.0:8888:8888  --mac-address 02:42:ac:11:00:02 eosadler/tigerdata
      # - run:
      #     name: Wait for Mediaflux
      #     command: dockerize -wait tcp://0.0.0.0:8888 -timeout 1m
      - run: docker create --name postgres --publish 0.0.0.0:5432:5432 --env POSTGRES_HOST_AUTH_METHOD=trust --env POSTGRES_DB=test_db --env POSTGRES_USER=tiger_data_user postgres:13.5-alpine
      - run: docker start postgres
      - browser-tools/install-firefox    
      # - run:
      #     name: Wait for PostgreSQL
      #     command: dockerize -wait tcp://localhost:5432 -timeout 1m
      # wait for postgres and mediaflux
      - run: sleep 10
      - run: bundle exec rake db:create
      - run: bundle exec rake db:migrate
      - run: bundle exec rake db:migrate RAILS_ENV=test
      - run:
          name: Run Rspec
          command: COVERALLS_REPO_TOKEN=$COVERALLS_REPO_TOKEN bundle exec rspec --format progress --format RspecJunitFormatter -o /tmp/rspec/rspec.xml
      - store_test_results:
          path: /tmp/rspec
      - store_artifacts:
          path: coverage
      - store_artifacts:
          path: /home/circleci/tiger_data/tmp/capybara

  js-lint:
    # We don't actually need any of the ruby environment for JS... but use what we have for now.
    working_directory: *root
    machine: true
    steps:
      - attach_workspace:
          at: *root
      - run:
          name: Run eslint
          command: yarn run eslint 'app/javascript/**'

  js-test:
    # We don't actually need any of the ruby environment for JS... but use what we have for now.
    working_directory: *root
    machine: true
    steps:
      - attach_workspace:
          at: *root
      - run:
          name: Run vitest
          command: yarn run vitest run --coverage

workflows:
  version: 2
  build_accept_deploy:
    jobs:
      - build
      - ruby-lint:
          requires:
            - build
      - ruby-test:
          requires:
            - build
      - js-lint:
          requires:
            - build
      - js-test:
          requires:
            - build
