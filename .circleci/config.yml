version: 2.1
commands:
  install_dependencies:
    steps:
      - run: gem install bundler -v '2.5.6'
      - run: cp Gemfile.lock Gemfile.lock.bak
      - restore_cache:
          key: &gem_key tiger_data-cimg-{{ checksum "Gemfile.lock.bak" }}
      - run: bundle config set path './vendor/bundle'
      - run: bundle config set --local without production
      - run: bundle install --jobs=4 --retry=3
      - save_cache:
          key: *gem_key
          paths:
            - ./vendor/bundle
      - restore_cache:
          name: Restore Yarn Package Cache
          key: &yarn_key tiger_data-yarn-cimg-{{ checksum "yarn.lock" }}
      - run:
          name: Install NPM Dependencies via Yarn
          command: yarn install --frozen-lockfile
      - save_cache:
          name: Save Yarn Package Cache
          key: *yarn_key
          paths:
            - ~/.cache/yarn
  run_mediaflux:
    steps:
      - setup_remote_docker:
          version: edge
      - run: echo "$DOCKERHUB_PASSWORD" | docker login --username $DOCKERHUB_USERNAME --password-stdin
      - run: sudo apt-get update
      - run: sudo apt-cache search docker
      - run: sudo apt-get install -y docker-ce-cli
      - run: docker run --help
      - run: docker run -d --privileged --name mediaflux --publish 0.0.0.0:8888:8888 --mac-address 02:42:ac:11:00:02 eosadler/mediaflux_dev:4
  run_postgres:
    steps:
      - run: docker create --name postgres --publish 0.0.0.0:5432:5432 --env POSTGRES_HOST_AUTH_METHOD=trust --env POSTGRES_DB=test_db --env POSTGRES_USER=tiger_data_user postgres:13.5-alpine
      - run: docker start postgres

jobs:
  build: # name of your job
    working_directory: ~/tiger_data
    docker:
      - &ruby_docker
        image: cimg/ruby:3.3.2-browsers
        environment:
          RAILS_ENV: test
      - &postgres
        image: cimg/postgres:16.3
        environment:
          POSTGRES_USER: tiger_data_user
          POSTGRES_DB: test_db
          POSTGRES_HOST_AUTH_METHOD: trust
      - &mediaflux
        image: eosadler/mediaflux_dev:4
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
    steps:
      - checkout
      - run: sudo apt update && sudo apt install postgresql-client libmsgpack-dev libpq-dev
      - install_dependencies
      - persist_to_workspace:
          root: &root '~/tiger_data'
          paths: '*'

  rubocop:
    working_directory: ~/tiger_data
    docker:
      - *ruby_docker
    steps:
      - attach_workspace:
          at: *root
      - run:
          name: Run rubocop
          command: bundle exec rubocop

  eslint:
    working_directory: ~/tiger_data
    docker:
      - *ruby_docker
    steps:
      - attach_workspace:
          at: *root
      - install_dependencies
      - run:
          name: Run eslint
          command: yarn run eslint 'app/javascript/**'
      - persist_to_workspace:
          root: &root '~/tiger_data'
          paths: '*'

  vitest:
    working_directory: ~/tiger_data
    docker:
      - *ruby_docker
    steps:
      - attach_workspace:
          at: *root
      - install_dependencies
      - run:
          name: Run vitest
          command: yarn run vitest run --coverage
      - persist_to_workspace:
          root: &root '~/tiger_data'
          paths: '*'

  rspec:
    working_directory: ~/tiger_data
    docker:
      - *ruby_docker
      - *postgres
    steps:
      - attach_workspace:
          at: *root
      - install_dependencies
      # wait for postgres and mediaflux
      # - run_mediaflux
      # - run_postgres
      - run: sleep 10
      - run: bundle exec rake db:migrate RAILS_ENV=test
      - run: bundle exec rake schema:create
      - run:
          name: Run RSpec
          command: COVERALLS_REPO_TOKEN=$COVERALLS_REPO_TOKEN bundle exec rspec --format progress --format RspecJunitFormatter -o /tmp/rspec/rspec.xml
      - store_test_results:
          path: /tmp/rspec
      - store_artifacts:
          path: coverage
      - store_artifacts:
          path: /home/circleci/tiger_data/tmp/capybara

workflows:
  version: 2
  ci:
    jobs:
      - build
      - rubocop:
          requires:
            - build
      - eslint:
          requires:
            - build
      - vitest:
          requires:
            - build
      - rspec:
          requires:
            - build

